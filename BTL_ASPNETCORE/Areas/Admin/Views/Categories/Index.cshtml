@model X.PagedList.IPagedList<BTL_ASPNETCORE.Models.Category>
@using X.PagedList.Mvc.Core

@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/Index.cshtml";
    var name = ViewData["name"] as string;
}

<h1>Index</h1>
<div class="btn-success text-center">@TempData["success"]</div>
<div class="btn-danger text-center">@TempData["danger"]</div>
<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>
<table class="table">
    <thead style="color:; font-size:25px">
        <tr>
            <th>
                CategoryId
            </th>
            <th>
                CategoryName
            </th>
            <th>
                Status
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <th>
                    @Html.DisplayFor(modelItem => item.CategoryId)
                </th>
                <td>
                    @Html.DisplayFor(modelItem => item.CategoryName)
                </td>
                @if (item.Status)
                {
                    <td>Stock</td>
                }
                else
                {
                    <td>Out of stock</td>
                }
                <td>
                    <a asp-action="Edit" asp-route-id="@item.CategoryId" class="btn btn-success">Edit</a> 
                    <a asp-action="Details" asp-route-id="@item.CategoryId" class="btn btn-info">Details</a> 
                    <a asp-action="Delete" asp-route-id="@item.CategoryId" class="btn btn-danger" onclick="return confirm('Do you sure wanna delete this?')">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@if (Model.Count == 0)
{
    if (name.Equals(""))
    {
        <p class="text-center alert-danger">NO ITEM</p>
    }
    else
    {
        <p class="text-center alert-danger">NO ITEM HAS NAME @name</p>
    }
    <div>
        <a asp-action="Index">Back to List</a>
    </div>
}
else
{
    <div>
        @Html.PagedListPager(Model, page => Url.Action("index", "categories", new { page = page, name = name }),
                new PagedListRenderOptions
        {
            UlElementClasses = new[] { "pagination", "justify-content-center" },
            LiElementClasses = new[] { "page-item" },
            PageClasses = new[] { "page-link", "btn", "btn-primary" }
        })
    </div>
}
